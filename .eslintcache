[{"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/reportWebVitals.js":"1","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/App.js":"2","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/index.js":"3","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Sidebar.js":"4","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/SidebarChat.js":"5","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Chat.js":"6","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Firebase.js":"7","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Login.js":"8","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/StateProvider.js":"9","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/reducer.js":"10"},{"size":362,"mtime":1606808452702,"results":"11","hashOfConfig":"12"},{"size":822,"mtime":1607078505479,"results":"13","hashOfConfig":"12"},{"size":676,"mtime":1607073222887,"results":"14","hashOfConfig":"12"},{"size":2056,"mtime":1607163406894,"results":"15","hashOfConfig":"12"},{"size":1492,"mtime":1607173163756,"results":"16","hashOfConfig":"12"},{"size":3400,"mtime":1607175964274,"results":"17","hashOfConfig":"12"},{"size":831,"mtime":1607026643083,"results":"18","hashOfConfig":"12"},{"size":1058,"mtime":1607078451279,"results":"19","hashOfConfig":"12"},{"size":380,"mtime":1607076064768,"results":"20","hashOfConfig":"12"},{"size":395,"mtime":1607071149420,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wvikjh",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/reportWebVitals.js",[],"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/App.js",["47","48","49"],"import React, { useState,useReducer } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport Chat from './Chat'\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nexport default function App() {\n\n  const [{user},dispatch]=useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? <Login /> :\n        (\n          <div className=\"app_body\">\n            <Router>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/rooms/:roomId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  <Chat />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        )\n      }\n    </div>\n\n  );\n}\n","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/index.js",[],"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Sidebar.js",["50"],"import { Avatar, IconButton } from '@material-ui/core'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport ChatIcon from '@material-ui/icons/Chat';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport { SearchOutlined } from '@material-ui/icons'\nimport React, { useState, useEffect } from 'react';\nimport './Sidebar.css'\nimport SidebarChat from './SidebarChat';\nimport db from './Firebase';\nimport { useStateValue } from './StateProvider';\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n    const [{user},dispatch]=useStateValue();\n\n    useEffect(() => {\n       const unsubscribe= db.collection('rooms').onSnapshot(snapshot => (\n            setRooms(snapshot.docs.map(doc => \n                ({\n                    id: doc.id,\n                    data:doc.data()\n\n                })))\n        ));\n        return () =>{\n            unsubscribe();\n        };\n    }, [])\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar_headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or Start new Chart\" type=\"text\" />\n                </div>\n            </div>\n            <div className=\"sidebar_chats\">\n                <SidebarChat addNewChat />\n                {rooms.map(room=>{\n                    return(\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n                )})}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/SidebarChat.js",[],"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Chat.js",["51"],"import React, { useEffect, useState } from 'react'\nimport { Avatar, IconButton } from '@material-ui/core'\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined, Mic } from '@material-ui/icons'\n// import SendIcon from '@material-ui/icons/Send';\nimport './Chat.css'\nimport { useParams } from 'react-router-dom';\nimport db from './Firebase'\nimport firebase from 'firebase'\nimport { useStateValue } from './StateProvider';\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState('');\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection('rooms')\n                .doc(roomId)\n                .onSnapshot(snapshot => (setRoomName(snapshot.data().name)));\n\n            db.collection('rooms').doc(roomId)\n                .collection(\"messages\")\n                .orderBy('timestamp', 'asc').onSnapshot(snapshot => (\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\n                ))\n        }\n    }, [roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000))\n    }, [roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log('You Typed >> ', input);\n\n        db.collection('rooms').doc(roomId).collection('messages')\n            .add({\n                message: input,\n                user: user.displayName,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        setInput(\" \");\n    }\n    return (\n        <div className=\"chat\">\n            <div className=\"chat_header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"chat_headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.timestamp?.toDate())\n                            .toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat_body\">\n                {messages.map(message => (\n                    <p className={`chat_message ${message.user === user.displayName && \"chat_reciever\"}`}><span className=\"chat_name\">{message.user}</span> {message.message} <span className=\"chat_timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span> </p>\n                )\n                )}\n\n            </div>\n            <div className=\"chat_footer\">\n                <InsertEmoticon />\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\n                    <button onClick={sendMessage}>send Message</button>\n                </form>\n                <Mic />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Firebase.js",[],"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/Login.js",["52"],"import React from 'react'\nimport { Button } from '@material-ui/core'\nimport \"./Login.css\"\nimport {auth,provider} from './Firebase'\nimport { useStateValue } from './StateProvider'\nimport { actionTypes } from './reducer'\nfunction Login() {\n    const [{},dispatch]=useStateValue();\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            dispatch({\n                type:actionTypes.SET_USER,\n                user:result.user\n            });\n        })\n        .catch(error=>alert(error.message));\n    };\n    \n    return (\n        <div className=\"login\">\n            <div className=\"login_container\">\n                <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\n                    alt=\"\"\n                />\n                <div className=\"login_text\">\n                    <h1>Sign in to WhatsApp</h1>\n                </div>\n                <Button onClick={signIn} >Sign In with Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/StateProvider.js",[],["53","54"],"/home/swapno/Documents/WEB_DEVELOPMENT/react/whatsapp-clone/src/reducer.js",[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":1,"column":26,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"60","line":11,"column":17,"nodeType":"57","messageId":"58","endLine":11,"endColumn":25},{"ruleId":"55","severity":1,"message":"60","line":13,"column":19,"nodeType":"57","messageId":"58","endLine":13,"endColumn":27},{"ruleId":"55","severity":1,"message":"60","line":16,"column":22,"nodeType":"57","messageId":"58","endLine":16,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":8,"column":12,"nodeType":"63","messageId":"64","endLine":8,"endColumn":14},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-global-assign","no-unsafe-negation"]